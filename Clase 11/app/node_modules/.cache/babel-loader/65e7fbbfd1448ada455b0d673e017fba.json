{"ast":null,"code":"import _regeneratorRuntime from \"/Users/smessina/Desktop/React/Clase 11/app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/smessina/Desktop/React/Clase 11/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/smessina/Desktop/React/Clase 11/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/smessina/Desktop/React/Clase 11/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport abrirSocket from \"socket.io-client\";\n\nvar Socket =\n/*#__PURE__*/\nfunction () {\n  function Socket() {\n    _classCallCheck(this, Socket);\n\n    this.socket = abrirSocket(\"http://localhost:9000\", {\n      forceNew: true\n    });\n  }\n\n  _createClass(Socket, [{\n    key: \"getAll\",\n    value: function () {\n      var _getAll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.socket.on('tasks_emit', function (data) {\n                  console.log(data);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAll() {\n        return _getAll.apply(this, arguments);\n      }\n\n      return getAll;\n    }()\n  }]);\n\n  return Socket;\n}();\n\nexport default Socket;","map":{"version":3,"sources":["/Users/smessina/Desktop/React/Clase 11/app/src/Socket.js"],"names":["abrirSocket","Socket","socket","forceNew","on","data","console","log"],"mappings":";;;;AAAA,OAAOA,WAAP,MAAwB,kBAAxB;;IAEMC,M;;;AACJ,oBAAa;AAAA;;AACX,SAAKC,MAAL,GAAcF,WAAW,CAAC,uBAAD,EAA0B;AAAEG,MAAAA,QAAQ,EAAG;AAAb,KAA1B,CAAzB;AACD;;;;;;;;;;;;;uBAGO,KAAKD,MAAL,CAAYE,EAAZ,CAAe,YAAf,EAA6B,UAAAC,IAAI,EAAI;AACzCC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,iBAFK,C;;;;;;;;;;;;;;;;;;;;;AAMV,eAAeJ,MAAf","sourcesContent":["import abrirSocket from \"socket.io-client\"\n\nclass Socket {\n  constructor(){\n    this.socket = abrirSocket(\"http://localhost:9000\", { forceNew : true })\n  }\n\n  async getAll(){\n    await this.socket.on('tasks_emit', data => {\n      console.log(data)\n    })\n  }\n\n}\nexport default Socket\n"]},"metadata":{},"sourceType":"module"}