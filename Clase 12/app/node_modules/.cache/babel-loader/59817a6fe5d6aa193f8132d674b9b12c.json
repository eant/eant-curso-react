{"ast":null,"code":"import _regeneratorRuntime from \"/Users/smessina/Desktop/React/Clase 12/app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/smessina/Desktop/React/Clase 12/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/smessina/Desktop/React/Clase 12/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/smessina/Desktop/React/Clase 12/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport abrirSocket from \"socket.io-client\";\n\nvar Socket =\n/*#__PURE__*/\nfunction () {\n  function Socket() {\n    _classCallCheck(this, Socket);\n\n    this.socket = abrirSocket(\"http://localhost:9000\", {\n      forceNew: true\n    });\n  }\n\n  _createClass(Socket, [{\n    key: \"getAll\",\n    value: function () {\n      var _getAll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(callback) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.socket.on('tasks_emit', function (data) {\n                  var tasks = data.map(function (element) {\n                    return {\n                      id: element.$loki,\n                      created: element.meta.created,\n                      title: element.title,\n                      responsible: element.responsible,\n                      description: element.description,\n                      priority: element.priority\n                    };\n                  });\n                  callback && callback(tasks);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAll(_x) {\n        return _getAll.apply(this, arguments);\n      }\n\n      return getAll;\n    }()\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(task) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.socket.emit('task_create', task);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function create(_x2) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.socket.emit('task_delete', id);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _delete(_x3) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }]);\n\n  return Socket;\n}();\n\nexport default Socket;","map":{"version":3,"sources":["/Users/smessina/Desktop/React/Clase 12/app/src/Socket.js"],"names":["abrirSocket","Socket","socket","forceNew","callback","on","data","tasks","map","element","id","$loki","created","meta","title","responsible","description","priority","task","emit"],"mappings":";;;;AAAA,OAAOA,WAAP,MAAwB,kBAAxB;;IAEMC,M;;;AACJ,oBAAa;AAAA;;AACX,SAAKC,MAAL,GAAcF,WAAW,CAAC,uBAAD,EAA0B;AAAEG,MAAAA,QAAQ,EAAG;AAAb,KAA1B,CAAzB;AACD;;;;;;;gDAEYC,Q;;;;;;uBACL,KAAKF,MAAL,CAAYG,EAAZ,CAAe,YAAf,EAA6B,UAAAC,IAAI,EAAI;AACzC,sBAAIC,KAAK,GAAGD,IAAI,CAACE,GAAL,CAAU,UAAAC,OAAO,EAAI;AACjC,2BAAO;AACNC,sBAAAA,EAAE,EAAGD,OAAO,CAACE,KADP;AAENC,sBAAAA,OAAO,EAAGH,OAAO,CAACI,IAAR,CAAaD,OAFjB;AAGNE,sBAAAA,KAAK,EAAGL,OAAO,CAACK,KAHV;AAINC,sBAAAA,WAAW,EAAGN,OAAO,CAACM,WAJhB;AAKNC,sBAAAA,WAAW,EAAGP,OAAO,CAACO,WALhB;AAMNC,sBAAAA,QAAQ,EAAGR,OAAO,CAACQ;AANb,qBAAP;AAQC,mBATW,CAAZ;AAUAb,kBAAAA,QAAQ,IAAIA,QAAQ,CAACG,KAAD,CAApB;AACD,iBAZK,C;;;;;;;;;;;;;;;;;;;;;iDAeKW,I;;;;;AACX,qBAAKhB,MAAL,CAAYiB,IAAZ,CAAiB,aAAjB,EAAgCD,IAAhC;;;;;;;;;;;;;;;;;;;;;iDAEWR,E;;;;;AACX,qBAAKR,MAAL,CAAYiB,IAAZ,CAAiB,aAAjB,EAAgCT,EAAhC;;;;;;;;;;;;;;;;;;;;;AAGJ,eAAeT,MAAf","sourcesContent":["import abrirSocket from \"socket.io-client\"\n\nclass Socket {\n  constructor(){\n    this.socket = abrirSocket(\"http://localhost:9000\", { forceNew : true })\n  }\n\n  async getAll(callback){\n    await this.socket.on('tasks_emit', data => {\n      let tasks = data.map( element => {\n  \t\t\t\treturn {\n  \t\t\t\t\tid : element.$loki,\n  \t\t\t\t\tcreated : element.meta.created,\n  \t\t\t\t\ttitle : element.title,\n  \t\t\t\t\tresponsible : element.responsible,\n  \t\t\t\t\tdescription : element.description,\n  \t\t\t\t\tpriority : element.priority\n  \t\t\t\t}\n      })\n      callback && callback(tasks)\n    })\n\n  }\n  async create(task){\n    this.socket.emit('task_create', task)\n  }\n  async delete(id){\n    this.socket.emit('task_delete', id)\n  }\n}\nexport default Socket\n"]},"metadata":{},"sourceType":"module"}